React Component Lifecycle Events
=================================

Components go through various states (not-mounted-to-DOM, mounting, mounted, updating)
React allows you to set functions that will be called during each stage

Awesome Image:
  https://d2vvqscadf4c1f.cloudfront.net/RXZidTc7S5WEicK3fiNW_Screen%20Shot%202016-02-25%20at%2012.06.29%20PM.png

React Docs:
  https://facebook.github.io/react/docs/react-component.html


Mount vs. Update

  mount: when a component goes from not-existing to existing-in-the-DOM for the first time
  update: when an already-mounted-component updates (b/c of changes to props or its state)

  ex. a parent component can use an if statement to sometimes include a child component
      this would mount and unmount the component


Most of your components should be "dumb" (ie. only have a render() method)


Common Uses of Lifecycle events:

   1. Triggering custom state events when a component is mounted (ex. fetch some data via Ajax)
   2. Deal w/ External Library Code (ex. Google Maps)




Handling User Events
====================

  add handlers directly to the JSX dom element
    <div onClick={(e) => {   }}>

  DEMO: input elements


  https://github.com/lighthouse-labs/react-simple-boilerplate





  + fetching data




